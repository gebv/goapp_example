version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11
    working_directory: ~/repo
    steps:
      - checkout
      # - run:
      #     name: Update env
      #     command: |
      #       echo 'export PATH="$GOPATH/bin:$PATH"' >> $BASH_ENV
      #       echo 'export GIT_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      #       source $BASH_ENV
      # - run:
      #     name: Run tests
      #     command: |
      #       make test ## TODO: fixed
      - run:
          name: Build application
          command: |
            make build
      - run:
          name: Preparing the artifacts
          command: |
            GITHASH=`git log -1 --pretty=format:"%h" || echo "???"`
            CURDATE=`date -u +%Y%m%d-%H%M%S`

            echo APPBUILD_GITHASH=${GITHASH} >> ./bin/META
            echo APPBUILD_CIRCLE_BUILD_NUM=${CIRCLE_BUILD_NUM} >> ./bin/META
            echo APPBUILD_GITBRANCH=${CIRCLE_BRANCH} >> ./bin/META
            echo APPBUILD_GITTAG=${CIRCLE_TAG} >> ./bin/META
            echo APPBUILD_DATE=${CURDATE} >> ./bin/META
            echo APPBUILD_GITCOMPARE=${CIRCLE_COMPARE_URL} >> ./bin/META

      - persist_to_workspace:
          root: ~/repo
          paths:
            - bin/*
      # - store_artifacts:
      #     path: /tmp/_dist

  store_artifacts:
    docker:
        - image: cibuilds/aws:latest
    working_directory: /tmp
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Prepare artifacts
          command: |
            mkdir -p /tmp/_dist
            cp ~/repo/bin/* /tmp/_dist
            tar -cvf /tmp/goapp_example.tar /tmp/_dist
      - deploy:
          name: Store artifacts
          command: |
            source /tmp/_dist/META

            if [ -z $APPBUILD_GITBRANCH ]
            then
              # hook by tag
              META_FILENAME=VERSION_${APPBUILD_GITTAG}
            else
              # hook by branch
              META_FILENAME=BRANCH_${APPBUILD_GITBRANCH}_LATEST
            fi

            DIST_FILENAME=goapp_example-${APPBUILD_DATE}-${APPBUILD_GITHASH}.tar

            echo $DIST_FILENAME >> $META_FILENAME

            aws s3 cp /tmp/goapp_example.tar s3://${STORE_TO_S3BUKET}/${DIST_FILENAME}
            aws s3 cp /tmp/${META_FILENAME} s3://${STORE_TO_S3BUKET}/${META_FILENAME}

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - store_artifacts:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only: master
